{"version":3,"sources":["api.js","components/Game.js","pages/Home.js","actions/gamesAction.js","components/GlobalStyles.js","App.js","reportWebVitals.js","reducers/gamesReducer.js","reducers/index.js","index.js"],"names":["base_url","currentYear","Date","getFullYear","currentMonth","month","getMonth","getCurrentMonth","currentDay","day","getDate","getCurrentDay","currentDate","lastYear","nextYear","popular_games","upcoming_games","new_games","StyledGame","styled","motion","div","Game","name","released","image","src","alt","GameList","Games","Home","dispatch","useDispatch","useEffect","a","axios","get","popularGamesData","upcomingGamesData","newGamesData","type","payload","popular","data","results","upcoming","new","useSelector","state","games","newGames","map","game","id","background_image","GlobalStyle","createGlobalStyle","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initState","searched","gameReducer","action","rootReducer","combineReducers","gamesReducer","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4a81b723.chunk.js","sourcesContent":["//Base URL\r\nconst base_url = 'https://api.rawg.io/api/';\r\n\r\n//Getting the date\r\nconst getCurrentMonth = () => {\r\n    const month = new Date().getMonth() + 1;\r\n    if (month < 10) {\r\n        return `0${month}`\r\n    } else {\r\n        return month;\r\n    }\r\n};\r\nconst getCurrentDay = () => {\r\n    const day = new Date().getDate();\r\n    if (day < 10) {\r\n        return `0${day}`\r\n    } else {\r\n        return day;\r\n    }\r\n};\r\n\r\n//Current day/month/year\r\nconst currentYear = new Date().getFullYear();\r\nconst currentMonth = getCurrentMonth();\r\nconst currentDay = getCurrentDay();\r\nconst currentDate = `${currentYear}-${currentMonth}-${currentDay}`;\r\nconst lastYear = `${currentYear - 1}-${currentMonth}-${currentDay}`;\r\nconst nextYear = `${currentYear + 1}-${currentMonth}-${currentDay}`;\r\n\r\n//Popular Games\r\nconst popular_games = `games?dates=${lastYear},${currentDate}&ordering=-rating&page_size=10`;\r\n//Upcoming Games\r\nconst upcoming_games = `games?dates=${currentDate},${nextYear}&ordering=-added&page_size=10`;\r\n//New Games\r\nconst new_games = `games?dates=${lastYear},${nextYear}&ordering=-relased&page_size=10`;\r\n\r\nexport const popularGamesURL = () => `${base_url}${popular_games}`;\r\nexport const upcomingGamesURL = () => `${base_url}${upcoming_games}`;\r\nexport const newGamesURL = () => `${base_url}${new_games}`;\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\n//Styling and Animation\r\nimport styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\n\r\n\r\nconst Game = ({ name, released, image }) => {\r\n    return (\r\n        <StyledGame>\r\n            <h3>{name}</h3>\r\n            <p>{released}</p>\r\n            <img src={image} alt={name} />\r\n        </StyledGame>\r\n    );\r\n};\r\n\r\nconst StyledGame = styled(motion.div)`\r\n    min-height: 30vh;\r\n    box-shadow: 0px 5px 30px rgba(0,0,0,0.2);\r\n    text-align: center;\r\n    border-radius: 1rem;\r\n    img{\r\n        width: 100%;\r\n        height: 40vh;\r\n        object-fit: cover;\r\n    }\r\n`;\r\n\r\nexport default Game;","import React, { useEffect } from \"react\";\r\n//Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loadGames } from \"../actions/gamesAction\";\r\n//Components\r\nimport Game from '../components/Game';\r\n//Styling and Animation\r\nimport styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst Home = () => {\r\n    //FETCH GAMES\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(loadGames());\r\n    }, [dispatch]);\r\n    //Get that data back\r\n    const { popular, newGames, upcoming } = useSelector((state) => state.games);\r\n    return (\r\n        <GameList>\r\n            <h2>Upcoming Games</h2>\r\n            <Games>\r\n                {upcoming.map(game => (\r\n                    <Game\r\n                        name={game.name}\r\n                        released={game.released}\r\n                        id={game.id}\r\n                        image={game.background_image}\r\n                        key={game.id}\r\n                    />\r\n                ))}\r\n            </Games>\r\n            <h2>Popular Games</h2>\r\n            <Games>\r\n                {popular.map(game => (\r\n                    <Game\r\n                        name={game.name}\r\n                        released={game.released}\r\n                        id={game.id}\r\n                        image={game.background_image}\r\n                        key={game.id}\r\n                    />\r\n                ))}\r\n            </Games>\r\n            <h2>New Games</h2>\r\n            <Games>\r\n                {newGames.map(game => (\r\n                    <Game\r\n                        name={game.name}\r\n                        released={game.released}\r\n                        id={game.id}\r\n                        image={game.background_image}\r\n                        key={game.id}\r\n                    />\r\n                ))}\r\n            </Games>\r\n        \r\n        </GameList>\r\n    );\r\n};\r\n\r\nconst GameList = styled(motion.div)`\r\n    padding: 0rem 5rem;\r\n    h2{\r\n        padding: 5rem 0rem;\r\n    }\r\n`;\r\n\r\nconst Games = styled(motion.div)`\r\n    min-height: 80vh;\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit,minmax(500px, 1fr));\r\n    grid-column-gap: 3rem;\r\n    grid-row-gap: 5rem;\r\n`;\r\n\r\nexport default Home;","import axios from \"axios\";\r\nimport { popularGamesURL, upcomingGamesURL, newGamesURL } from '../api';\r\n\r\n//Action Creator\r\n\r\nexport const loadGames = () => async (dispatch) => {\r\n    //FETCH AXIOS\r\n    const popularGamesData = await axios.get(popularGamesURL());\r\n    const upcomingGamesData = await axios.get(upcomingGamesURL());\r\n    const newGamesData = await axios.get(newGamesURL());\r\n    dispatch({\r\n        type: \"FETCH_GAMES\",\r\n        payload: {\r\n            popular: popularGamesData.data.results,\r\n            upcoming: upcomingGamesData.data.results,\r\n            new: newGamesData.data.results,\r\n        },\r\n    });\r\n};","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    *{\r\n        margin: 0;\r\n        padding: 0;\r\n        box-sizing: border-box;\r\n    }\r\n    html{\r\n        &::-webkit-scrollbar{\r\n            width: 0.5rem;\r\n        }\r\n        &::-webkit-scrollbar.thumb{\r\n            background-color: darkgrey;\r\n        }\r\n    }\r\n    body{\r\n        font-family: \"Montserrat\", sans-serif;\r\n        width: 100%;\r\n    }\r\n    h2{\r\n        font-size: 3rem;\r\n        font-family: 'Abril Fatface', cursive;\r\n        font-weight: lighter;\r\n        color: #333;\r\n\r\n    }\r\n    h3{\r\n        font-size: 1.3rem;\r\n        color: #333;\r\n        padding: 1.5rem;\r\n    }\r\n    p{\r\n        font-size: 1.2rem;\r\n        line-height: 200%;\r\n        color: #696969;\r\n    }\r\n    a{\r\n        text-decoration: none;\r\n        color: #333;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyle;","import React from 'react';\n//Components and pages\nimport Home from './pages/Home';\nimport GlobalStyle from './components/GlobalStyles';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <GlobalStyle />\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\nconst initState = {\r\n    popular: [],\r\n    newGames: [],\r\n    upcoming: [],\r\n    searched: []\r\n}\r\n\r\nconst gameReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case \"FETCH_GAMES\":\r\n            return {\r\n                ...state,\r\n                popular: action.payload.popular,\r\n                upcoming: action.payload.upcoming,\r\n                newGames: action.payload.new,\r\n            };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\n\r\n//ACTION CREATOR\r\nconst fetchGames = (userData) => {\r\n    return {\r\n        type: \"FETCH_GAMES\",\r\n        payload: userData\r\n    };\r\n};\r\n\r\n\r\nexport default gameReducer;","import { combineReducers} from \"redux\";\r\nimport gamesReducer from \"./gamesReducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    games: gamesReducer,\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n//REDUX SETUP\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './reducers';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancer(applyMiddleware(thunk))\n  );\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}